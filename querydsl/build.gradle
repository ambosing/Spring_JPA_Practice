plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'study'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

// QueryDSL 클래스 생성을 위한 태스크
tasks.register('generateQueryDSL', JavaCompile) {
    source = sourceSets.main.java
    classpath = configurations.compileClasspath
    options.annotationProcessorPath = configurations.annotationProcessor
    destinationDir = file("src/main/generated")
    options.compilerArgs = ["-proc:only", "-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"]
}

compileJava {
    dependsOn generateQueryDSL
}


tasks.named('test') {
    useJUnitPlatform()
}

clean {
    delete file('src/main/generated')
}
